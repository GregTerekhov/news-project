{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","src/js/home-favourites-read.js","src/favourite.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","//================================ Логика страницы Index, действие с Прочитанными =====================================================\nconst newsGallery = document.querySelector('.js-articles');\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\n\nnewsGallery.addEventListener('click', onReadMoreClick);\n\n//============== Функция обработчик по клику на ссылку ReadMore ==============================================\nfunction onReadMoreClick(event) {\n  //   event.preventDefault();\n  if (!event.target.classList.contains('markup-unit__read-more')) return; // проверяем туда ли тырнули\n\n  const clickDate = receiveDate(); // получаем дату клика в виде 20/02/2023\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем из локального хранилища массив URL прочитанных новстей\n  const dataFromLocaleStorage = onGetLocaleStorageData(READ_KEY); // получаем массив объектов прочитанных новостей из Локального Хранилища\n\n  //------ Логика для массива ссылок прочитаных новостей\n  addHaveReadLink(urlFromLocaleStorage, parsedCardData.link, READ_URL_KEY);\n\n  //------ Логика для массива объектов с датой и новостями\n  addHaveReadNews(dataFromLocaleStorage, parsedCardData, clickDate, READ_KEY);\n}\n\n//================================= Логика страницы Index, действие с Фавориты ============================================================\n\nconst FAVORITES_KEY = 'FAVORITES';\nlet favorites = [];\n\nnewsGallery.addEventListener('click', onAddRemoveLocaleStorageData); // вешаем слушателя событий на контейнер с новостями\n\n//=========== Функция-обработчик Клика на кнопку добавить/убрать в/из Фавориты ==============================================\nfunction onAddRemoveLocaleStorageData(event) {\n  if (!event.target.hasAttribute('data-info')) return; // проверка туда ли тырнули\n\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив объектов из Локального Хранилища\n\n  if (event.target.classList.contains('js-favorites')) {\n    // проверка условия содержит ли кнопка класс-метку что новость уже добавлена в избранное\n\n    event.target.textContent = 'Add to favorites'; // изменение текстового контента кнопки\n\n    event.target.classList.remove('js-favorites'); // убираем класс-метку что карточка добавлена в избранное\n\n    if (!dataFromLocaleStorage) {\n      // проверка на null из пустого Локального Хранилища\n      console.log(\"News isn't in favorites\");\n      return;\n    }\n\n    const index = dataFromLocaleStorage.find((card, index) => {\n      // получаем индекс нужной карточки\n      if (card.link === parsedCardData.link) {\n        return index;\n      }\n    });\n\n    dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n    if (dataFromLocaleStorage.length === 0) {\n      // проверяем пустой массив или нет\n      localStorage.removeItem('FAVORITES');\n      return;\n    }\n\n    onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n    return;\n  }\n  //В противном случае==========//\n  event.target.textContent = 'Remove from favorites'; // изменение текстового контента кнопки\n\n  event.target.classList.add('js-favorites'); // добавляем класс-метку что карточка добавлена в избранное\n\n  if (dataFromLocaleStorage) {\n    // проверка на возврат null из пустого массива\n    const findPresenceResult = dataFromLocaleStorage.some(\n      card => card.link === parsedCardData.link\n    ); // получаем булевое значение есть ли новость в избранном\n\n    if (findPresenceResult) {\n      // делаем условие новости на присутствие в Локальном Хранилище в избранном\n      console.log(\"It's allredy in Favorites\");\n      return;\n    }\n\n    favorites = [...dataFromLocaleStorage]; // распыляем в массив \"Фавориты\" данные из массива полученные из Локального хранилища\n  }\n\n  favorites.push(parsedCardData); // добавляем объект с данными карточки новости в массив \"Фавориты\"\n\n  onSetLocaleStorageData(FAVORITES_KEY, favorites); // сетаем в локальное хранилище\n\n  favorites = []; // очищаем массив \"Фавориты\"\n}\n\n//========== Функция для Получения Данных из Locale Storage =======================================\nfunction onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функция парсинга данных из JSON файла =================================================\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функкция Добавления Данных в Locale Storage ========================================\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функция получения даты в формате 20/02/2021\nfunction receiveDate() {\n  const date = new Date();\n  const day = addLeadingZero(date.getDate());\n  const month = addLeadingZero(date.getMonth() + 1);\n  const year = addLeadingZero(date.getFullYear());\n  return `${day}/${month}/${year}`;\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n//========== Функция добавления ссылок на новости в отдельный массив в Locale Storage ============\nfunction addHaveReadLink(array, link, key) {\n  if (array) {\n    // если вернулся массив ссылок\n    const urlPresenceResult = array.some(item => item === link); // ищем есть ли совпадение с link результат\n\n    if (!urlPresenceResult) {\n      // если нету такого URL в массиве прочитанных новостей\n      array.push(link); //добавляем в массив URL из локального хранилища URL текущей новости\n      onSetLocaleStorageData(key, array); // сетаем в хранилище обновленный массив URL прочитанных новостей\n    }\n\n    return;\n  }\n\n  onSetLocaleStorageData(key, [link]); // если массива нет, создаем массив и помещаем туда url прочитанной новости и сетаем в Хранилище\n}\n\n//========== Функция добавления объекта прочитанных новостей согласно дате просмотра =============\nfunction addHaveReadNews(newsArr, cardObj, date, key) {\n  if (newsArr) {\n    // если возвращается массив дат с новостями из Локального Хранилища\n\n    let resultsArr = []; // Массив-прокладка\n\n    newsArr.forEach(object => {\n      // перебираем все двухуровневые объекты прочитанных новостей с датами из Локального Хранилища\n      const { newsArray } = object;\n\n      const isPresent = newsArray.some(news => news.link === cardObj.link); // проверяем есть ли новость в коллекции\n      resultsArr.push(isPresent);\n    });\n\n    const isNewsPresent = resultsArr.some(result => result); // проверка присутствия новости, если присутствует то выходим\n    resultsArr = []; // очищаем массив-прокладку на всякий случай\n\n    if (!isNewsPresent) {\n      // Если новость не присутствует в прочитанных\n      const datePresence = newsArr.some(item => item.whenRead === date); // проверяем есть ли сегодняшняя дата в массиве прочитанных\n\n      if (datePresence) {\n        // если дата уже присутствует в массиве\n        const arrWithNewObject = newsArr.map(item => {\n          // создаем новый массив перебирая массив из Локального Хранилища\n          const { whenRead, newsArray } = item;\n          if (whenRead === date) {\n            //когда совпадение по дате\n            newsArray.push(cardObj); // пушим в массив новостей объект с карточки\n            return { whenRead, newsArray };\n          }\n        });\n\n        onSetLocaleStorageData(key, arrWithNewObject); // сетаем модифицированный массив в локальное хранилище\n        return;\n      }\n\n      const whenHaveReadObject = {\n        // создаем новый объект с датой когда новость прочитана и массивом для Прочитанных на эту дату\n        whenRead: date,\n        newsArray: [cardObj],\n      };\n\n      newsArr.push(whenHaveReadObject); // пушим объект с новостью и датой в существующий массив из Локального Хранилища\n\n      onSetLocaleStorageData(key, newsArr); // сетаем новый массив в локальное хранилище\n    }\n\n    return;\n  }\n  // Если не возвращается массив\n  const haveReadArray = []; // создаем массив который будем сетать в Локальное хранилище\n  const whenHaveReadObject = {\n    // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n    whenRead: date,\n    newsArray: [cardObj],\n  };\n\n  haveReadArray.push(whenHaveReadObject); // пушим в новый массив объект с датой и массивом прочитанных новостей\n\n  onSetLocaleStorageData(key, haveReadArray); // сетаем массив с прочитанными новостями и датой в Локальное Хранилище\n}\n","import './js/home-favourites-read';\n\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\nconst FAVORITES_KEY = 'FAVORITES'; // ключ для массива новостей Фавориты в Локальном Хранилище\n\nconst favouriteGallery = document.querySelector('.js-articles-favourites');\n\nfavouriteGallery.addEventListener('click', onRemoveFromFavorites); // вешаем слушатель событий на галерею новостей\n\nonOpenFavorites(FAVORITES_KEY); // запуск функции для рендера страницы\n\n//=============== Функция при открытии страныцы \"Фавориты\" ==================================\nfunction onOpenFavorites(key) {\n  const dataFromLocaleStorage = onGetLocaleStorageData(key); // получаем данные из избранных в Локальном Хранилище\n\n  if (!dataFromLocaleStorage || dataFromLocaleStorage.length === 0) {\n    // проверка на null или пустой массив\n    alert(\n      'Добавьте страницу заглушку пожалуйста. Файл favourite.js, 19-строка'\n    );\n    return;\n  }\n\n  onCreateMurkup(dataFromLocaleStorage);\n}\n\n//============= Функция-обработчик удаления из Фаворитов ==============================\nfunction onRemoveFromFavorites(event) {\n  if (!event.target.hasAttribute('data-info')) return;\n\n  const card = event.target.closest('.markup-unit');\n\n  const cardIDLink = event.target.dataset.id; // получаем ID карточки в виде линка на первоисточник\n\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив из Локального хранилища\n\n  if (!dataFromLocaleStorage) {\n    // проверка на null из пустого Локального Хранилища\n    console.log(\"News isn't in favorites\");\n    return;\n  }\n\n  const index = dataFromLocaleStorage.find((card, index) => {\n    // получаем индекс нужной карточки\n    if (card.link === cardIDLink) {\n      return index;\n    }\n  });\n\n  dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n  if (dataFromLocaleStorage.length === 0) {\n    // проверяем пустой массив или нет\n    localStorage.removeItem('FAVORITES');\n    onRemoveElement(card);\n    return;\n  }\n\n  onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n  onRemoveElement(card);\n}\n\n//============= Функция для рендера страницы ===========================================\nfunction onCreateMurkup(arrayOfObjects) {\n  const favoritesMurkup = arrayOfObjects\n    .map(newsObject => {\n      // перебираем массив из Локального хранилища и создаем разметку для карточки\n      const { title, category, date, link, description, imageURL } = newsObject;\n      const favorite = JSON.stringify(newsObject);\n\n      //Логика отображения прочитанных на странице Фавориты--------------------------------------\n      let check = 'display: none;'; // стиль по умолчанию для плашки \"Already read\"\n      const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем массив URL прочитанных новостей\n      check = checkIfReadByUrl(urlFromLocaleStorage, link); //возвращает строку с разным свойством display\n      if (!check) {\n        // проверка на undefined\n        check = 'display: none;';\n      }\n      //---------------------------------------------------------------------\n\n      return `<li class=\"markup-unit markup-unit__read\" name=\"card\">\n    <p class=\"markup-unit__section\">${category}</p>\n    <p class=\"markup-unit__already-read\" style='${check}'>Already read\n    <svg class=\"markup-unit__icon-check\" width=\"18\" height=\"18\" viewBox=\"0 0 37 32\">\n      <path stroke=\"#00DD73\" stroke-linejoin=\"miter\" stroke-linecap=\"square\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M28.779 6.389c-0.288 0.009-0.546 0.131-0.732 0.323l-16.313 16.313-6.713-6.713c-0.195-0.209-0.473-0.339-0.78-0.339-0.589 0-1.067 0.478-1.067 1.067 0 0.308 0.13 0.585 0.339 0.78l0.001 0.001 7.467 7.467c0.193 0.193 0.459 0.312 0.754 0.312s0.561-0.119 0.754-0.312v0l17.067-17.067c0.199-0.194 0.323-0.465 0.323-0.765 0-0.589-0.478-1.067-1.067-1.067-0.011 0-0.022 0-0.033 0l0.002-0z\"></path>\n    </svg>\n    </p>\n    <img \n        class=\"markup-unit__card-image\" \n        src=\"${imageURL}\" \n        alt=\"placeholder\"\n        />\n    <button \n        class=\"markup-unit__add-favorite js-fbutton js-favorites\" \n        type=\"button\" \n        data-info\n        data-favorite='${favorite}'\n        data-id='${link}'\n      >\n      <p \n        class=\"markup-unit__favorite-text js-fbutton\"\n        data-favorite='${favorite}'\n        style=\"pointer-events: none;\"\n      >\n          Remove from favourites\n      </p>\n      <svg \n          data-favorite='${favorite}'  \n          class=\"markup-unit__favorite-icon markup-unit__favorite-icon--active js-fbutton\" \n          width=\"15\" \n          height=\"15\" \n          viewBox=\"0 0 37 32\"\n          style=\"pointer-events: none;\"\n        >\n        <path style=\"stroke: var(--color1, #4440f7)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M10.666 2.286c-4.207 0-7.619 3.377-7.619 7.543 0 3.363 1.333 11.345 14.458 19.413 0.235 0.143 0.505 0.219 0.78 0.219s0.545-0.076 0.78-0.219c13.125-8.069 14.458-16.050 14.458-19.413 0-4.166-3.412-7.543-7.619-7.543s-7.619 4.571-7.619 4.571-3.412-4.571-7.619-4.571z\"></path>\n      </svg>\n    </button>\n    <h2 class=\"markup-unit__card-header\" name=\"card_header\">\n        ${title}\n    </h2>\n    <p class=\"markup-unit__card-text\" name=\"card_text\">\n        ${description}\n    </p>\n    <div class=\"markup-unit__card-footer\">\n        <p class=\"markup-unit__card-date\">${date}</p>\n      <a \n        class=\"markup-unit__read-more\" \n        href=\"${link}\" \n        name=\"read_more\"\n        data-favorite='${favorite}'\n      >\n          Read more\n      </a>\n    </div>\n    </li>`;\n    })\n    .join(' ');\n\n  return (favouriteGallery.innerHTML = favoritesMurkup);\n}\n\n//============= Функция удаления элементов из ДОМ ======================================\nfunction onRemoveElement(element) {\n  element.remove();\n}\n\n// Логика работы с \"Прочитанными\" на странице Фавориты --------------------------------------------------------------------\n\nfavouriteGallery.addEventListener('click', onReadMoreClick); // вешаем слушатель событий на контейнер с новостями\n\n//============== Функция обработчик по клику на ссылку ReadMore ==============================================\nfunction onReadMoreClick(event) {\n  //   event.preventDefault();\n  if (!event.target.classList.contains('markup-unit__read-more')) return; // проверяем туда ли тырнули\n\n  const clickDate = receiveDate(); // получаем дату клика в виде 20/02/2023\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем из локального хранилища массив URL прочитанных новстей\n  const dataFromLocaleStorage = onGetLocaleStorageData(READ_KEY); // получаем массив объектов прочитанных новостей из Локального Хранилища\n\n  //------ Логика для массива ссылок прочитаных новостей\n  addHaveReadLink(urlFromLocaleStorage, parsedCardData.link, READ_URL_KEY);\n\n  //------ Логика для массива объектов с датой и новостями\n  addHaveReadNews(dataFromLocaleStorage, parsedCardData, clickDate, READ_KEY);\n}\n\n//========== Функция получения даты в формате 20/02/2021\nfunction receiveDate() {\n  const date = new Date();\n  const day = addLeadingZero(date.getDate());\n  const month = addLeadingZero(date.getMonth() + 1);\n  const year = addLeadingZero(date.getFullYear());\n  return `${day}/${month}/${year}`;\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n//========== Функция добавления ссылок на новости в отдельный массив в Locale Storage ============\nfunction addHaveReadLink(array, link, key) {\n  if (array) {\n    // если вернулся массив ссылок\n    const urlPresenceResult = array.some(item => item === link); // ищем есть ли совпадение с link результат\n\n    if (!urlPresenceResult) {\n      // если нету такого URL в массиве прочитанных новостей\n      array.push(link); //добавляем в массив URL из локального хранилища URL текущей новости\n      onSetLocaleStorageData(key, array); // сетаем в хранилище обновленный массив URL прочитанных новостей\n    }\n\n    return;\n  }\n\n  onSetLocaleStorageData(key, [link]); // если массива нет, создаем массив и помещаем туда url прочитанной новости и сетаем в Хранилище\n}\n\n//========== Функция добавления объекта прочитанных новостей согласно дате просмотра =============\nfunction addHaveReadNews(newsArr, cardObj, date, key) {\n  if (newsArr) {\n    // если возвращается массив дат с новостями из Локального Хранилища\n\n    const resultsArr = [];\n\n    newsArr.forEach(object => {\n      // перебираем все объекты прочитанных новостей с датами из Локального Хранилища\n      const { newsArray } = object;\n\n      const isPresent = newsArray.some(news => news.link === cardObj.link); // проверяем есть ли новость в коллекции\n      resultsArr.push(isPresent);\n    });\n\n    const isNewsPresent = resultsArr.some(result => result); // проверка присутствия новости\n\n    if (!isNewsPresent) {\n      // Если новость не присутствует в прочитанных\n      const datePresence = newsArr.some(item => item.whenRead === date); // проверяем есть ли сегодняшняя дата в массиве прочитанных\n\n      if (datePresence) {\n        // если дата уже присутствует в массиве\n        const arrWithNewObject = newsArr.map(item => {\n          // создаем новый массив перебирая массив из Локального Хранилища\n          const { whenRead, newsArray } = item;\n          if (whenRead === date) {\n            //когда совпадение по дате\n            newsArray.push(cardObj); // пушим в массив новостей объект с карточки\n            return { whenRead, newsArray };\n          }\n        });\n        console.log(arrWithNewObject);\n        onSetLocaleStorageData(key, arrWithNewObject); // сетаем модифицированный массив в локальное хранилище\n        return;\n      }\n\n      const whenHaveReadObject = {\n        // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n        whenRead: date,\n        newsArray: [cardObj],\n      };\n\n      newsArr.push(whenHaveReadObject); // пушим объект с новостью и датой в существующий массив из Локального Хранилища\n\n      onSetLocaleStorageData(key, newsArr); // сетаем новый массив в локальное хранилище\n    }\n\n    return;\n  }\n\n  const haveReadArray = []; // создаем массив который будем сетать в Локальное хранилище\n  const whenHaveReadObject = {\n    // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n    whenRead: date,\n    newsArray: [cardObj],\n  };\n\n  haveReadArray.push(whenHaveReadObject); // пушим в новый массив объект с датой и массивом прочитанных новостей\n\n  onSetLocaleStorageData(key, haveReadArray); // сетаем массив с прочитанными новостями и датой в Локальное Хранилище\n}\n//-----------------------------------------------------------------------------------------------------------------------------------\n\n//==================== Сервис Функции ===========================================\nfunction onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction checkIfReadByUrl(array, newsLink) {\n  if (!array || array.length === 0) {\n    // проверка на null или пустой массив\n    return;\n  }\n  const compareResult = array.some(item => item === newsLink);\n  if (compareResult) {\n    return 'display: flex;';\n  } else {\n    return 'display: none;';\n  }\n}\n"],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","obj","parcelRequire","__esModule","len","length","i","arr2","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$dc8c4865b6888e7f$var$newsGallery","document","querySelector","$dc8c4865b6888e7f$var$READ_KEY","$dc8c4865b6888e7f$var$READ_URL_KEY","addEventListener","event","target","classList","contains","clickDate","date","Date","day","$dc8c4865b6888e7f$var$addLeadingZero","getDate","month","getMonth","year","getFullYear","concat","parsedCardData","$dc8c4865b6888e7f$var$makeParseJson","dataset","favorite","urlFromLocaleStorage","$dc8c4865b6888e7f$var$onGetLocaleStorageData","dataFromLocaleStorage","array","link","key","some","item","push","$dc8c4865b6888e7f$var$onSetLocaleStorageData","$dc8c4865b6888e7f$var$addHaveReadLink","newsArr","cardObj","resultsArr","forEach","object","isPresent","newsArray","news","isNewsPresent","result","whenRead","map","whenHaveReadObject","haveReadArray","whenHaveReadObject1","$dc8c4865b6888e7f$var$addHaveReadNews","$dc8c4865b6888e7f$var$FAVORITES_KEY","$dc8c4865b6888e7f$var$favorites","JSON","parse","localStorage","getItem","error","console","log","stringData","data","setItem","stringify","String","padStart","hasAttribute","textContent","remove","index1","find","card","index","splice","removeItem","add","$parcel$interopDefault","$fe988d6f732edd76$var$READ_KEY","$fe988d6f732edd76$var$READ_URL_KEY","$fe988d6f732edd76$var$FAVORITES_KEY","$fe988d6f732edd76$var$favouriteGallery","$fe988d6f732edd76$var$onRemoveElement","element","$fe988d6f732edd76$var$addLeadingZero","$fe988d6f732edd76$var$onGetLocaleStorageData","$fe988d6f732edd76$var$onSetLocaleStorageData","card1","closest","cardIDLink","id","alert","arrayOfObjects","favoritesMurkup","newsObject","title","category","description","imageURL","check","newsLink","$fe988d6f732edd76$var$checkIfReadByUrl","join","innerHTML","$fe988d6f732edd76$var$onOpenFavorites","$fe988d6f732edd76$var$makeParseJson","$fe988d6f732edd76$var$addHaveReadLink","arrWithNewObject","$fe988d6f732edd76$var$addHaveReadNews"],"version":3,"file":"favourite.a8c43789.js.map"}