{"mappings":"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","sources":["src/js/refs.js","src/js/themeSwitcher.js","src/read.js"],"sourcesContent":["export const refs = {\n  READ_URL_KEY: 'READ_URL', // ключ для массива URL прочитанных новостей в Локальном Хранилище\n  FAVORITES_KEY: 'FAVORITES', // ключ для массива новостей Фавориты в Локальном Хранилище\n  bodyContainerEl: document.querySelector('.js-body-container'),\n  switcher: document.querySelectorAll('.toggle-mode__checkbox'),\n  switchSlider: document.querySelectorAll('.toggle-mode__slider'),\n  body: document.querySelector('body'),\n  footer: document.querySelector('.footer'),\n  darkText: document.querySelectorAll('.toggle-mode__dark'),\n  lightText: document.querySelectorAll('.toggle-mode__light'),\n  articles: document.querySelector('.articles'),\n  categories: document.querySelector('.categories'),\n  date: document.querySelector('#input-picker'),\n};\n\nexport function onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function getNoFound(element) {\n  const noFound = `<div class=\"no-found\">\n  <h1 class=\"no-found__text\">We haven't found news from this category</h1>\n  <div class=\"no-found__image\"></div>\n  </div>`;\n  return (element.innerHTML = noFound);\n}","import { refs } from './refs';\n\nlet darkMode = localStorage.getItem('darkMode');\n\n// export const refs = {\n//   switcher: document.querySelector('.toggle-mode__checkbox'),\n//   switchSlider: document.querySelector('.toggle-mode__slider'),\n//   body: document.querySelector('body'),\n//   footer: document.querySelector('.footer'),\n//   darkText: document.querySelector('.toggle-mode__dark'),\n//   lightText: document.querySelector('.toggle-mode__light'),\n// };\n\nonStart();\n\nexport function onStart() {\n  if (darkMode) {\n    for (let i = 0; i < refs.switcher.length; i += 1) {\n      refs.switcher[i].checked = true;\n    }\n    refs.footer.classList.add('darkmode-footer');\n  }\n}\n\nfor (let i = 0; i < refs.switcher.length; i += 1) {\n  refs.switcher[i].addEventListener('click', onSwitcherClick);\n  refs.switcher[i].addEventListener('click', enableAnimation, { once: true });\n}\n\nfunction makeDarkMode() {\n  if (refs.switcher[0].checked !== true) {\n    refs.switcher[0].checked = true;\n  } else if (refs.switcher[1].checked !== true) {\n    refs.switcher[1].checked = true;\n  }\n  refs.body.classList.add('darkmode');\n  refs.footer.classList.add('darkmode-footer');\n  localStorage.setItem('darkMode', true);\n}\n\nexport function enableAnimation() {\n  refs.body.style.transition = '1s';\n}\n\nfunction makeLightMode() {\n  if (refs.switcher[0].checked !== false) {\n    refs.switcher[0].checked = false;\n  } else if (refs.switcher[1].checked !== false) {\n    refs.switcher[1].checked = false;\n  }\n  refs.body.classList.remove('darkmode');\n  refs.footer.classList.remove('darkmode-footer');\n  localStorage.removeItem('darkMode');\n}\n\nexport function onSwitcherClick() {\n  darkMode = localStorage.getItem('darkMode');\n  if (!darkMode) {\n    makeDarkMode();\n    return;\n  }\n  makeLightMode();\n}\nexport function onInputSubmit(e) {\n  try {\n    e.preventDefault();\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { onGetLocaleStorageData } from './js/refs';\nimport { getNoFound } from './js/refs';\nimport {\n  onSwitcherClick,\n  onStart,\n  enableAnimation,\n  refs,\n  onInputSubmit,\n} from './js/themeSwitcher';\nexport const formEl = document.querySelector('.toggle-mode');\nformEl.addEventListener('submit', onInputSubmit);\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\nconst FAVORITES_KEY = 'FAVORITES';\nlet favorites = [];\n\nconst accordionRef = document.querySelector('.js-haveread'); // получаем ссылку на секцию аккордиона\nconst accordionListRef = document.querySelector('.accordion-list'); // получаем ссылку на панель с новостями\n\naccordionListRef.addEventListener('click', onFavoriteClick); // делегируем слушание на секцию аккордиона\n\nonOpenFavorites(READ_KEY);\n\n//====== Функция-обработчик нажатия на кнопку Фавориты ==================\nfunction onFavoriteClick(event) {\n  if (!event.target.hasAttribute('data-info')) return; // проверка туда ли тырнули\n\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив объектов из Локального Хранилища\n\n  if (event.target.classList.contains('js-favorites')) {\n    // проверка условия содержит ли кнопка класс-метку что новость уже добавлена в избранное\n\n    event.target.textContent = 'Add to favorites'; // изменение текстового контента кнопки\n\n    event.target.classList.remove('js-favorites'); // убираем класс-метку что карточка добавлена в избранное\n\n    if (!dataFromLocaleStorage) {\n      // проверка на null из пустого Локального Хранилища\n\n      return;\n    }\n\n    const index = dataFromLocaleStorage.find((card, index) => {\n      // получаем индекс нужной карточки\n      if (card.link === parsedCardData.link) {\n        return index;\n      }\n    });\n\n    dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n    if (dataFromLocaleStorage.length === 0) {\n      // проверяем пустой массив или нет\n      localStorage.removeItem('FAVORITES');\n      return;\n    }\n\n    onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n    return;\n  }\n  //В противном случае==========//\n  event.target.textContent = 'Remove from favorites'; // изменение текстового контента кнопки\n\n  event.target.classList.add('js-favorites'); // добавляем класс-метку что карточка добавлена в избранное\n\n  if (dataFromLocaleStorage) {\n    // проверка на возврат null из пустого массива\n    const findPresenceResult = dataFromLocaleStorage.some(\n      card => card.link === parsedCardData.link\n    ); // получаем булевое значение есть ли новость в избранном\n\n    if (findPresenceResult) {\n      // делаем условие новости на присутствие в Локальном Хранилище в избранном\n\n      return;\n    }\n\n    favorites = [...dataFromLocaleStorage]; // распыляем в массив \"Фавориты\" данные из массива полученные из Локального хранилища\n  }\n\n  favorites.push(parsedCardData); // добавляем объект с данными карточки новости в массив \"Фавориты\"\n\n  onSetLocaleStorageData(FAVORITES_KEY, favorites); // сетаем в локальное хранилище\n\n  favorites = []; // очищаем массив \"Фавориты\"\n}\n\n//=============== Функция при открытии страныцы \"Прочитанные\" ==================================\nfunction onOpenFavorites(key) {\n  const dataFromLocaleStorage = onGetLocaleStorageData(key); // получаем данные из избранных в Локальном Хранилище\n\n  if (!dataFromLocaleStorage || dataFromLocaleStorage.length === 0) {\n    // проверка на null или пустой массив\n    getNoFound(accordionRef);\n    return;\n  }\n\n  onCreateReadMurkup(dataFromLocaleStorage);\n}\n\n//============== Функция рендера разметки ======================================\nfunction onCreateReadMurkup(array) {\n  array.forEach(date => {\n    // перебираем массив с объектами со свойством даты и массивом новостей\n\n    const firstMurkup = createFirstMurkup(date); // создаем разметку секции аккордеона с датой для новостей (разметка первого уровня)\n    accordionListRef.insertAdjacentHTML('beforeend', firstMurkup); // рендерим эту разметку\n\n    const accordionPanel = document.querySelector('.accordion-list_panel'); // получаем ссылку на новосозданный элемент\n\n    accordionPanel.innerHTML = date.newsArray\n      .map(newsObject => {\n        // рендерим разметку непосредственно новостей (разметка второго внутреннего уровня)\n        const { title, category, date, link, description, imageURL } =\n          newsObject;\n        const favorite = JSON.stringify(newsObject);\n\n        //Логика проверки наличия новости в Фаворитах ------------------------------------------\n        const fromFavorites = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив из фаворитов из Локального Хранилища\n        let configReadMarkup = checkFavouritesByUrl(fromFavorites, link); //по результату проверки возвращается объект настроек который используется для добавления динамических свойств в разметку\n        if (!configReadMarkup) {\n          // на случай undefined\n          configReadMarkup = {\n            class: 'zaglushka',\n            addRemove: 'Add to favourites',\n          };\n        }\n        //--------------------------------------------------------------------------------------\n        return `<li class=\"markup-unit markup-unit__read\" name=\"card\">\n    <p class=\"markup-unit__section\">${category}</p>\n    \n    <img \n        class=\"markup-unit__card-image\" \n        src=\"${imageURL}\" \n        alt=\"placeholder\"\n        />\n    <button \n        class=\"markup-unit__add-favorite js-fbutton ${configReadMarkup.class}\" \n        type=\"button\" \n        data-info\n        data-favorite='${favorite}'\n        data-id='${link}'\n      >\n      <p \n        class=\"markup-unit__favorite-text js-fbutton\"\n        data-favorite='${favorite}'\n        style=\"pointer-events: none;\"\n      >\n          ${configReadMarkup.addRemove}\n      </p>\n      <svg \n          data-favorite='${favorite}'  \n          class=\"markup-unit__favorite-icon markup-unit__favorite-icon--active js-fbutton\" \n          width=\"15\" \n          height=\"15\" \n          viewBox=\"0 0 37 32\"\n          style=\"pointer-events: none;\"\n        >\n        <path d=\"M10.666 2.286c-4.207 0-7.619 3.377-7.619 7.543 0 3.363 1.333 11.345 14.458 19.413 0.235 0.143 0.505 0.219 0.78 0.219s0.545-0.076 0.78-0.219c13.125-8.069 14.458-16.050 14.458-19.413 0-4.166-3.412-7.543-7.619-7.543s-7.619 4.571-7.619 4.571-3.412-4.571-7.619-4.571z\"></path>\n      </svg>\n    </button>\n    <a class=\"markup-unit__global-link\"\n      href=\"${link}\" \n      name=\"read_more\"\n      target=\"_blank\"\n      data-favorite='${favorite}'\n    >\n    <div class=\"markup-unit__details\">\n      <div class=\"markup-unit__subdetails\">\n       <h2 class=\"markup-unit__card-header\" name=\"card_header\">\n        ${title}\n    </h2>\n    <p class=\"markup-unit__card-text\" name=\"card_text\">\n        ${description}\n    </p>\n        <div class=\"markup-unit__card-footer\">\n          <p class=\"markup-unit__card-date\">${date}</p>\n          <p \n            class=\"markup-unit__read-more\" \n          >\n            Read more\n          </p>\n        </div>\n      </div>\n    </div>\n  </a>\n    </li>`;\n      })\n      .join(' ');\n  });\n}\n\nfunction createFirstMurkup(obj) {\n  return `<li class=\"accordion-list_item\">\n                <div class=\"accordion-title_wrapper\">\n                    <p class=\"accordion-list_title\">\n                        ${obj.whenRead}\n                    </p>\n                    <div class=\"accordion-arrow__wraper\">\n                        <svg width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M1.7625 9L-3.18545e-07 7.28745L7.5 3.27835e-07L15 7.28745L13.2375 9L7.5 3.43725L1.7625 9Z\" fill=\"#111321\"/>\n                        </svg>\n                    </div>\n                </div>\n                <div class=\"accordion-list_panel\"></div>\n            </li>`;\n}\n\n// function onGetLocaleStorageData(key) {\n//   try {\n//     return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n//========== Функция парсинга данных из JSON файла =================================================\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функкция Добавления Данных в Locale Storage ========================================\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction checkFavouritesByUrl(array, newsLink) {\n  if (!array || array.length === 0) {\n    // проверка на null или пустой массив\n    return;\n  }\n  const compareResult = array.some(item => item.link === newsLink);\n  if (compareResult) {\n    return {\n      class: 'js-favorites',\n      addRemove: 'Remove from favorites',\n    };\n  } else {\n    return {\n      class: 'zaglushka',\n      addRemove: 'Add to favourites',\n    };\n  }\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","READ_URL_KEY","FAVORITES_KEY","bodyContainerEl","document","querySelector","switcher","querySelectorAll","switchSlider","body","footer","darkText","lightText","articles","categories","date","$ee27a4d7c64fc8c4$export$5184f6e63027e3a1","key","JSON","parse","localStorage","getItem","error","console","log","$fdab0c6ff777066e$var$darkMode","i1","length","checked","classList","add","$fdab0c6ff777066e$export$aaa2d21dd8862419","i","addEventListener","$fdab0c6ff777066e$export$376f3c112de5853c","$fdab0c6ff777066e$export$e54344fdf1f48e7e","once","style","transition","setItem","remove","removeItem","e","preventDefault","$56697b3ed36fb081$var$favorites","$56697b3ed36fb081$var$accordionRef","$56697b3ed36fb081$var$accordionListRef","$56697b3ed36fb081$var$onSetLocaleStorageData","data","stringify","event","target","hasAttribute","parsedCardData","stringData","$56697b3ed36fb081$var$makeParseJson","dataset","favorite","dataFromLocaleStorage","contains","textContent","index1","find","card","index","link","splice","some","push","innerHTML","array","forEach","date1","firstMurkup","whenRead","insertAdjacentHTML","newsArray","map","newsObject","title","category","description","imageURL","configReadMarkup","newsLink","item","class","addRemove","$56697b3ed36fb081$var$checkFavouritesByUrl","join","$56697b3ed36fb081$var$onOpenFavorites"],"version":3,"file":"read.faca1016.js.map"}