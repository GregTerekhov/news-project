{"mappings":"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","sources":["src/js/refs.js","src/js/themeSwitcher.js","src/favourite.js"],"sourcesContent":["export const refs = {\n  READ_URL_KEY: 'READ_URL', // ключ для массива URL прочитанных новостей в Локальном Хранилище\n  FAVORITES_KEY: 'FAVORITES', // ключ для массива новостей Фавориты в Локальном Хранилище\n  bodyContainerEl: document.querySelector('.js-body-container'),\n  switcher: document.querySelectorAll('.toggle-mode__checkbox'),\n  switchSlider: document.querySelectorAll('.toggle-mode__slider'),\n  body: document.querySelector('body'),\n  footer: document.querySelector('.footer'),\n  darkText: document.querySelectorAll('.toggle-mode__dark'),\n  lightText: document.querySelectorAll('.toggle-mode__light'),\n  articles: document.querySelector('.articles'),\n  categories: document.querySelector('.categories'),\n  date: document.querySelector('#input-picker'),\n};\n\nexport function onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function getNoFound(element) {\n  const noFound = `<div class=\"no-found\">\n  <h1 class=\"no-found__text\">We haven't found news from this category</h1>\n  <div class=\"no-found__image\"></div>\n  </div>`;\n  return (element.innerHTML = noFound);\n}","import { refs } from './refs';\n\nlet darkMode = localStorage.getItem('darkMode');\n\n// export const refs = {\n//   switcher: document.querySelector('.toggle-mode__checkbox'),\n//   switchSlider: document.querySelector('.toggle-mode__slider'),\n//   body: document.querySelector('body'),\n//   footer: document.querySelector('.footer'),\n//   darkText: document.querySelector('.toggle-mode__dark'),\n//   lightText: document.querySelector('.toggle-mode__light'),\n// };\n\nonStart();\n\nexport function onStart() {\n  if (darkMode) {\n    for (let i = 0; i < refs.switcher.length; i += 1) {\n      refs.switcher[i].checked = true;\n    }\n    refs.footer.classList.add('darkmode-footer');\n  }\n}\n\nfor (let i = 0; i < refs.switcher.length; i += 1) {\n  refs.switcher[i].addEventListener('click', onSwitcherClick);\n  refs.switcher[i].addEventListener('click', enableAnimation, { once: true });\n}\n\nfunction makeDarkMode() {\n  if (refs.switcher[0].checked !== true) {\n    refs.switcher[0].checked = true;\n  } else if (refs.switcher[1].checked !== true) {\n    refs.switcher[1].checked = true;\n  }\n  refs.body.classList.add('darkmode');\n  refs.footer.classList.add('darkmode-footer');\n  localStorage.setItem('darkMode', true);\n}\n\nexport function enableAnimation() {\n  refs.body.style.transition = '1s';\n}\n\nfunction makeLightMode() {\n  if (refs.switcher[0].checked !== false) {\n    refs.switcher[0].checked = false;\n  } else if (refs.switcher[1].checked !== false) {\n    refs.switcher[1].checked = false;\n  }\n  refs.body.classList.remove('darkmode');\n  refs.footer.classList.remove('darkmode-footer');\n  localStorage.removeItem('darkMode');\n}\n\nexport function onSwitcherClick() {\n  darkMode = localStorage.getItem('darkMode');\n  if (!darkMode) {\n    makeDarkMode();\n    return;\n  }\n  makeLightMode();\n}\nexport function onInputSubmit(e) {\n  try {\n    e.preventDefault();\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { getNoFound } from './js/refs';\nimport {\n  onSwitcherClick,\n  onStart,\n  enableAnimation,\n  refs,\n  onInputSubmit,\n} from './js/themeSwitcher';\nimport { onGetLocaleStorageData } from './js/refs';\nexport const formEl = document.querySelector('.toggle-mode');\nformEl.addEventListener('submit', onInputSubmit);\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\nconst FAVORITES_KEY = 'FAVORITES'; // ключ для массива новостей Фавориты в Локальном Хранилище\nconst urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY);\n\nconst favouriteGallery = document.querySelector('.js-articles-favourites');\n\nfavouriteGallery.addEventListener('click', onRemoveFromFavorites); // вешаем слушатель событий на галерею новостей\n\nonOpenFavorites(FAVORITES_KEY); // запуск функции для рендера страницы\n\n//=============== Функция при открытии страныцы \"Фавориты\" ==================================\nfunction onOpenFavorites(key) {\n  const dataFromLocaleStorage = onGetLocaleStorageData(key); // получаем данные из избранных в Локальном Хранилище\n\n  if (!dataFromLocaleStorage || dataFromLocaleStorage.length === 0) {\n    // проверка на null или пустой массив\n    // alert(\n    //   'Добавьте страницу заглушку пожалуйста. Файл favourite.js, 19-строка'\n    // );\n    getNoFound(favouriteGallery);\n    return;\n  }\n\n  onCreateMurkup(dataFromLocaleStorage);\n}\n\n//============= Функция-обработчик удаления из Фаворитов ==============================\nfunction onRemoveFromFavorites(event) {\n  if (!event.target.hasAttribute('data-info')) return;\n\n  const card = event.target.closest('.markup-unit');\n\n  const cardIDLink = event.target.dataset.id; // получаем ID карточки в виде линка на первоисточник\n\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив из Локального хранилища\n\n  if (!dataFromLocaleStorage) {\n    // проверка на null из пустого Локального Хранилища\n\n    return;\n  }\n\n  const index = dataFromLocaleStorage.find((card, index) => {\n    // получаем индекс нужной карточки\n    if (card.link === cardIDLink) {\n      return index;\n    }\n  });\n\n  dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n  if (dataFromLocaleStorage.length === 0) {\n    // проверяем пустой массив или нет\n    localStorage.removeItem('FAVORITES');\n    onRemoveElement(card);\n    return;\n  }\n\n  onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n  onRemoveElement(card);\n}\n\n//============= Функция для рендера страницы ===========================================\nfunction onCreateMurkup(arrayOfObjects) {\n  const favoritesMurkup = arrayOfObjects\n    .map(newsObject => {\n      // перебираем массив из Локального хранилища и создаем разметку для карточки\n      const { title, category, date, link, description, imageURL } = newsObject;\n      const favorite = JSON.stringify(newsObject);\n\n      //Логика отображения прочитанных на странице Фавориты--------------------------------------\n      let check = 'display: none;'; // стиль по умолчанию для плашки \"Already read\"\n      const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем массив URL прочитанных новостей\n      check = checkIfReadByUrl(urlFromLocaleStorage, link); //возвращает строку с разным свойством display\n      if (!check) {\n        // проверка на undefined\n        check = 'display: none;';\n      }\n      //---------------------------------------------------------------------\n\n      return `<li class=\"markup-unit markup-unit__read\" name=\"card\">\n    <p class=\"markup-unit__section\">${category}</p>\n      ${\n        urlFromLocaleStorage?.find(readNews => readNews === link)\n          ? `<p class=\"markup-unit__already-read\" style='${check}'>Already read\n      <svg class=\"markup-unit__icon-check\" width=\"18\" height=\"18\" viewBox=\"0 0 37 32\">\n        <path stroke=\"#00DD73\" stroke-linejoin=\"miter\" stroke-linecap=\"square\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M28.779 6.389c-0.288 0.009-0.546 0.131-0.732 0.323l-16.313 16.313-6.713-6.713c-0.195-0.209-0.473-0.339-0.78-0.339-0.589 0-1.067 0.478-1.067 1.067 0 0.308 0.13 0.585 0.339 0.78l0.001 0.001 7.467 7.467c0.193 0.193 0.459 0.312 0.754 0.312s0.561-0.119 0.754-0.312v0l17.067-17.067c0.199-0.194 0.323-0.465 0.323-0.765 0-0.589-0.478-1.067-1.067-1.067-0.011 0-0.022 0-0.033 0l0.002-0z\"></path>\n      </svg>\n      </p>`\n          : ''\n      }\n    <img \n        class=\"markup-unit__card-image\" \n        src=\"${imageURL}\" \n        alt=\"placeholder\"\n        />\n    <button \n        class=\"markup-unit__add-favorite js-fbutton js-favorites\" \n        type=\"button\" \n        data-info\n        data-favorite='${favorite}'\n        data-id='${link}'\n      >\n      <p \n        class=\"markup-unit__favorite-text js-fbutton\"\n        data-favorite='${favorite}'\n        style=\"pointer-events: none;\"\n      >\n          Remove from favourites\n      </p>\n      <svg \n          data-favorite='${favorite}'  \n          class=\"markup-unit__favorite-icon markup-unit__favorite-icon--active js-fbutton\" \n          width=\"15\" \n          height=\"15\" \n          viewBox=\"0 0 37 32\"\n          style=\"pointer-events: none;\"\n        >\n        <path style=\"stroke: var(--color1, #4440f7)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M10.666 2.286c-4.207 0-7.619 3.377-7.619 7.543 0 3.363 1.333 11.345 14.458 19.413 0.235 0.143 0.505 0.219 0.78 0.219s0.545-0.076 0.78-0.219c13.125-8.069 14.458-16.050 14.458-19.413 0-4.166-3.412-7.543-7.619-7.543s-7.619 4.571-7.619 4.571-3.412-4.571-7.619-4.571z\"></path>\n      </svg>\n    </button>\n    <a class=\"markup-unit__global-link\"\n      href=\"${link}\" \n      name=\"read_more\"\n      target=\"_blank\"\n      data-favorite='${favorite}'\n    >\n    <div class=\"markup-unit__details\">\n      <div class=\"markup-unit__subdetails\">\n       <h2 class=\"markup-unit__card-header\" name=\"card_header\">\n        ${title}\n    </h2>\n    <p class=\"markup-unit__card-text\" name=\"card_text\">\n        ${description}\n    </p>\n        <div class=\"markup-unit__card-footer\">\n          <p class=\"markup-unit__card-date\">${date}</p>\n          <p \n            class=\"markup-unit__read-more\" \n          >\n            Read more\n          </p>\n        </div>\n      </div>\n    </div>\n  </a>\n    </li>`;\n    })\n    .join(' ');\n\n  return (favouriteGallery.innerHTML = favoritesMurkup);\n}\n\n//============= Функция удаления элементов из ДОМ ======================================\nfunction onRemoveElement(element) {\n  element.remove();\n}\n\n// Логика работы с \"Прочитанными\" на странице Фавориты --------------------------------------------------------------------\n\nfavouriteGallery.addEventListener('click', onReadMoreClick); // вешаем слушатель событий на контейнер с новостями\n\n//============== Функция обработчик по клику на ссылку ReadMore ==============================================\nfunction onReadMoreClick(event) {\n  //   event.preventDefault();\n  if (!event.target.classList.contains('markup-unit__read-more')) return; // проверяем туда ли тырнули\n\n  const clickDate = receiveDate(); // получаем дату клика в виде 20/02/2023\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  // получаем из локального хранилища массив URL прочитанных новстей\n  const dataFromLocaleStorage = onGetLocaleStorageData(READ_KEY); // получаем массив объектов прочитанных новостей из Локального Хранилища\n\n  //------ Логика для массива ссылок прочитаных новостей\n  addHaveReadLink(urlFromLocaleStorage, parsedCardData.link, READ_URL_KEY);\n\n  //------ Логика для массива объектов с датой и новостями\n  addHaveReadNews(dataFromLocaleStorage, parsedCardData, clickDate, READ_KEY);\n}\n\n//========== Функция получения даты в формате 20/02/2021\nfunction receiveDate() {\n  const date = new Date();\n  const day = addLeadingZero(date.getDate());\n  const month = addLeadingZero(date.getMonth() + 1);\n  const year = addLeadingZero(date.getFullYear());\n  return `${day}/${month}/${year}`;\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n//========== Функция добавления ссылок на новости в отдельный массив в Locale Storage ============\nfunction addHaveReadLink(array, link, key) {\n  if (array) {\n    // если вернулся массив ссылок\n    const urlPresenceResult = array.some(item => item === link); // ищем есть ли совпадение с link результат\n\n    if (!urlPresenceResult) {\n      // если нету такого URL в массиве прочитанных новостей\n      array.push(link); //добавляем в массив URL из локального хранилища URL текущей новости\n      onSetLocaleStorageData(key, array); // сетаем в хранилище обновленный массив URL прочитанных новостей\n    }\n\n    return;\n  }\n\n  onSetLocaleStorageData(key, [link]); // если массива нет, создаем массив и помещаем туда url прочитанной новости и сетаем в Хранилище\n}\n\n//========== Функция добавления объекта прочитанных новостей согласно дате просмотра =============\nfunction addHaveReadNews(newsArr, cardObj, date, key) {\n  if (newsArr) {\n    // если возвращается массив дат с новостями из Локального Хранилища\n\n    const resultsArr = [];\n\n    newsArr.forEach(object => {\n      // перебираем все объекты прочитанных новостей с датами из Локального Хранилища\n      const { newsArray } = object;\n\n      const isPresent = newsArray.some(news => news.link === cardObj.link); // проверяем есть ли новость в коллекции\n      resultsArr.push(isPresent);\n    });\n\n    const isNewsPresent = resultsArr.some(result => result); // проверка присутствия новости\n\n    if (!isNewsPresent) {\n      // Если новость не присутствует в прочитанных\n      const datePresence = newsArr.some(item => item.whenRead === date); // проверяем есть ли сегодняшняя дата в массиве прочитанных\n\n      if (datePresence) {\n        // если дата уже присутствует в массиве\n        const arrWithNewObject = newsArr.map(item => {\n          // создаем новый массив перебирая массив из Локального Хранилища\n          const { whenRead, newsArray } = item;\n          if (whenRead === date) {\n            //когда совпадение по дате\n            newsArray.push(cardObj); // пушим в массив новостей объект с карточки\n            return { whenRead, newsArray };\n          }\n        });\n    \n        onSetLocaleStorageData(key, arrWithNewObject); // сетаем модифицированный массив в локальное хранилище\n        return;\n      }\n\n      const whenHaveReadObject = {\n        // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n        whenRead: date,\n        newsArray: [cardObj],\n      };\n\n      newsArr.push(whenHaveReadObject); // пушим объект с новостью и датой в существующий массив из Локального Хранилища\n\n      onSetLocaleStorageData(key, newsArr); // сетаем новый массив в локальное хранилище\n    }\n\n    return;\n  }\n\n  const haveReadArray = []; // создаем массив который будем сетать в Локальное хранилище\n  const whenHaveReadObject = {\n    // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n    whenRead: date,\n    newsArray: [cardObj],\n  };\n\n  haveReadArray.push(whenHaveReadObject); // пушим в новый массив объект с датой и массивом прочитанных новостей\n\n  onSetLocaleStorageData(key, haveReadArray); // сетаем массив с прочитанными новостями и датой в Локальное Хранилище\n}\n//-----------------------------------------------------------------------------------------------------------------------------------\n\n//==================== Сервис Функции ===========================================\nexport function onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction checkIfReadByUrl(array, newsLink) {\n  if (!array || array.length === 0) {\n    // проверка на null или пустой массив\n    return;\n  }\n  const compareResult = array.some(item => item === newsLink);\n  if (compareResult) {\n    return 'display: flex;';\n  } else {\n    return 'display: none;';\n  }\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","READ_URL_KEY","FAVORITES_KEY","bodyContainerEl","document","querySelector","switcher","querySelectorAll","switchSlider","body","footer","darkText","lightText","articles","categories","date","$ee27a4d7c64fc8c4$export$5184f6e63027e3a1","key","JSON","parse","localStorage","getItem","error","console","log","$fdab0c6ff777066e$var$darkMode","i1","length","checked","classList","add","$fdab0c6ff777066e$export$aaa2d21dd8862419","i","addEventListener","$fdab0c6ff777066e$export$376f3c112de5853c","$fdab0c6ff777066e$export$e54344fdf1f48e7e","once","style","transition","setItem","remove","removeItem","e","preventDefault","$3687957ccdbf9c3e$var$urlFromLocaleStorage","$3687957ccdbf9c3e$var$favouriteGallery","$3687957ccdbf9c3e$var$onRemoveElement","element","$3687957ccdbf9c3e$var$addLeadingZero","value","String","padStart","$3687957ccdbf9c3e$var$onSetLocaleStorageData","data","stringify","event","target","hasAttribute","card1","closest","cardIDLink","dataset","id","dataFromLocaleStorage","index1","find","card","index","link","splice","innerHTML","arrayOfObjects","favoritesMurkup","map","newsObject","title","category","description","imageURL","favorite","check","urlFromLocaleStorage1","array","newsLink","some","item","$3687957ccdbf9c3e$var$checkIfReadByUrl","readNews","join","$3687957ccdbf9c3e$var$onCreateMurkup","$3687957ccdbf9c3e$var$onOpenFavorites","contains","clickDate","Date","day","getDate","month","getMonth","year","getFullYear","$3687957ccdbf9c3e$var$receiveDate","parsedCardData","stringData","$3687957ccdbf9c3e$var$makeParseJson","push","$3687957ccdbf9c3e$var$addHaveReadLink","newsArr","cardObj","resultsArr","forEach","object","newsArray","isPresent","news","result","whenRead","whenHaveReadObject","haveReadArray","$3687957ccdbf9c3e$var$addHaveReadNews"],"version":3,"file":"favourite.0c0f39fb.js.map"}