{"mappings":"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","sources":["src/js/home-favourites-read.js","src/favourite.js"],"sourcesContent":["//================================ Логика страницы Index, действие с Прочитанными =====================================================\nconst newsGallery = document.querySelector('.js-articles');\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\n\nnewsGallery.addEventListener('click', onReadMoreClick);\n\n//============== Функция обработчик по клику на ссылку ReadMore ==============================================\nfunction onReadMoreClick(event) {\n  //   event.preventDefault();\n  if (!event.target.classList.contains('markup-unit__read-more')) return; // проверяем туда ли тырнули\n\n  const clickDate = receiveDate(); // получаем дату клика в виде 20/02/2023\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем из локального хранилища массив URL прочитанных новстей\n  const dataFromLocaleStorage = onGetLocaleStorageData(READ_KEY); // получаем массив объектов прочитанных новостей из Локального Хранилища\n\n  //------ Логика для массива ссылок прочитаных новостей\n  addHaveReadLink(urlFromLocaleStorage, parsedCardData.link, READ_URL_KEY);\n\n  //------ Логика для массива объектов с датой и новостями\n  addHaveReadNews(dataFromLocaleStorage, parsedCardData, clickDate, READ_KEY);\n}\n\n//================================= Логика страницы Index, действие с Фавориты ============================================================\n\nconst FAVORITES_KEY = 'FAVORITES';\nlet favorites = [];\n\nnewsGallery.addEventListener('click', onAddRemoveLocaleStorageData); // вешаем слушателя событий на контейнер с новостями\n\n//=========== Функция-обработчик Клика на кнопку добавить/убрать в/из Фавориты ==============================================\nfunction onAddRemoveLocaleStorageData(event) {\n  if (!event.target.hasAttribute('data-info')) return; // проверка туда ли тырнули\n\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив объектов из Локального Хранилища\n\n  if (event.target.classList.contains('js-favorites')) {\n    // проверка условия содержит ли кнопка класс-метку что новость уже добавлена в избранное\n\n    event.target.textContent = 'Add to favorites'; // изменение текстового контента кнопки\n\n    event.target.classList.remove('js-favorites'); // убираем класс-метку что карточка добавлена в избранное\n\n    if (!dataFromLocaleStorage) {\n      // проверка на null из пустого Локального Хранилища\n      console.log(\"News isn't in favorites\");\n      return;\n    }\n\n    const index = dataFromLocaleStorage.find((card, index) => {\n      // получаем индекс нужной карточки\n      if (card.link === parsedCardData.link) {\n        return index;\n      }\n    });\n\n    dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n    if (dataFromLocaleStorage.length === 0) {\n      // проверяем пустой массив или нет\n      localStorage.removeItem('FAVORITES');\n      return;\n    }\n\n    onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n    return;\n  }\n  //В противном случае==========//\n  event.target.textContent = 'Remove from favorites'; // изменение текстового контента кнопки\n\n  event.target.classList.add('js-favorites'); // добавляем класс-метку что карточка добавлена в избранное\n\n  if (dataFromLocaleStorage) {\n    // проверка на возврат null из пустого массива\n    const findPresenceResult = dataFromLocaleStorage.some(\n      card => card.link === parsedCardData.link\n    ); // получаем булевое значение есть ли новость в избранном\n\n    if (findPresenceResult) {\n      // делаем условие новости на присутствие в Локальном Хранилище в избранном\n      console.log(\"It's allredy in Favorites\");\n      return;\n    }\n\n    favorites = [...dataFromLocaleStorage]; // распыляем в массив \"Фавориты\" данные из массива полученные из Локального хранилища\n  }\n\n  favorites.push(parsedCardData); // добавляем объект с данными карточки новости в массив \"Фавориты\"\n\n  onSetLocaleStorageData(FAVORITES_KEY, favorites); // сетаем в локальное хранилище\n\n  favorites = []; // очищаем массив \"Фавориты\"\n}\n\n//========== Функция для Получения Данных из Locale Storage =======================================\nfunction onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функция парсинга данных из JSON файла =================================================\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функкция Добавления Данных в Locale Storage ========================================\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функция получения даты в формате 20/02/2021\nfunction receiveDate() {\n  const date = new Date();\n  const day = addLeadingZero(date.getDate());\n  const month = addLeadingZero(date.getMonth() + 1);\n  const year = addLeadingZero(date.getFullYear());\n  return `${day}/${month}/${year}`;\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n//========== Функция добавления ссылок на новости в отдельный массив в Locale Storage ============\nfunction addHaveReadLink(array, link, key) {\n  if (array) {\n    // если вернулся массив ссылок\n    const urlPresenceResult = array.some(item => item === link); // ищем есть ли совпадение с link результат\n\n    if (!urlPresenceResult) {\n      // если нету такого URL в массиве прочитанных новостей\n      array.push(link); //добавляем в массив URL из локального хранилища URL текущей новости\n      onSetLocaleStorageData(key, array); // сетаем в хранилище обновленный массив URL прочитанных новостей\n    }\n\n    return;\n  }\n\n  onSetLocaleStorageData(key, [link]); // если массива нет, создаем массив и помещаем туда url прочитанной новости и сетаем в Хранилище\n}\n\n//========== Функция добавления объекта прочитанных новостей согласно дате просмотра =============\nfunction addHaveReadNews(newsArr, cardObj, date, key) {\n  if (newsArr) {\n    // если возвращается массив дат с новостями из Локального Хранилища\n\n    let resultsArr = []; // Массив-прокладка\n\n    newsArr.forEach(object => {\n      // перебираем все двухуровневые объекты прочитанных новостей с датами из Локального Хранилища\n      const { newsArray } = object;\n\n      const isPresent = newsArray.some(news => news.link === cardObj.link); // проверяем есть ли новость в коллекции\n      resultsArr.push(isPresent);\n    });\n\n    const isNewsPresent = resultsArr.some(result => result); // проверка присутствия новости, если присутствует то выходим\n    resultsArr = []; // очищаем массив-прокладку на всякий случай\n\n    if (!isNewsPresent) {\n      // Если новость не присутствует в прочитанных\n      const datePresence = newsArr.some(item => item.whenRead === date); // проверяем есть ли сегодняшняя дата в массиве прочитанных\n\n      if (datePresence) {\n        // если дата уже присутствует в массиве\n        const arrWithNewObject = newsArr.map(item => {\n          // создаем новый массив перебирая массив из Локального Хранилища\n          const { whenRead, newsArray } = item;\n          if (whenRead === date) {\n            //когда совпадение по дате\n            newsArray.push(cardObj); // пушим в массив новостей объект с карточки\n            return { whenRead, newsArray };\n          }\n        });\n\n        onSetLocaleStorageData(key, arrWithNewObject); // сетаем модифицированный массив в локальное хранилище\n        return;\n      }\n\n      const whenHaveReadObject = {\n        // создаем новый объект с датой когда новость прочитана и массивом для Прочитанных на эту дату\n        whenRead: date,\n        newsArray: [cardObj],\n      };\n\n      newsArr.push(whenHaveReadObject); // пушим объект с новостью и датой в существующий массив из Локального Хранилища\n\n      onSetLocaleStorageData(key, newsArr); // сетаем новый массив в локальное хранилище\n    }\n\n    return;\n  }\n  // Если не возвращается массив\n  const haveReadArray = []; // создаем массив который будем сетать в Локальное хранилище\n  const whenHaveReadObject = {\n    // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n    whenRead: date,\n    newsArray: [cardObj],\n  };\n\n  haveReadArray.push(whenHaveReadObject); // пушим в новый массив объект с датой и массивом прочитанных новостей\n\n  onSetLocaleStorageData(key, haveReadArray); // сетаем массив с прочитанными новостями и датой в Локальное Хранилище\n}\n","import './js/home-favourites-read';\n\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\nconst FAVORITES_KEY = 'FAVORITES'; // ключ для массива новостей Фавориты в Локальном Хранилище\n\nconst favouriteGallery = document.querySelector('.js-articles-favourites');\n\nfavouriteGallery.addEventListener('click', onRemoveFromFavorites); // вешаем слушатель событий на галерею новостей\n\nonOpenFavorites(FAVORITES_KEY); // запуск функции для рендера страницы\n\n//=============== Функция при открытии страныцы \"Фавориты\" ==================================\nfunction onOpenFavorites(key) {\n  const dataFromLocaleStorage = onGetLocaleStorageData(key); // получаем данные из избранных в Локальном Хранилище\n\n  if (!dataFromLocaleStorage || dataFromLocaleStorage.length === 0) {\n    // проверка на null или пустой массив\n    alert(\n      'Добавьте страницу заглушку пожалуйста. Файл favourite.js, 19-строка'\n    );\n    return;\n  }\n\n  onCreateMurkup(dataFromLocaleStorage);\n}\n\n//============= Функция-обработчик удаления из Фаворитов ==============================\nfunction onRemoveFromFavorites(event) {\n  if (!event.target.hasAttribute('data-info')) return;\n\n  const card = event.target.closest('.markup-unit');\n\n  const cardIDLink = event.target.dataset.id; // получаем ID карточки в виде линка на первоисточник\n\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив из Локального хранилища\n\n  if (!dataFromLocaleStorage) {\n    // проверка на null из пустого Локального Хранилища\n    console.log(\"News isn't in favorites\");\n    return;\n  }\n\n  const index = dataFromLocaleStorage.find((card, index) => {\n    // получаем индекс нужной карточки\n    if (card.link === cardIDLink) {\n      return index;\n    }\n  });\n\n  dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n  if (dataFromLocaleStorage.length === 0) {\n    // проверяем пустой массив или нет\n    localStorage.removeItem('FAVORITES');\n    onRemoveElement(card);\n    return;\n  }\n\n  onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n  onRemoveElement(card);\n}\n\n//============= Функция для рендера страницы ===========================================\nfunction onCreateMurkup(arrayOfObjects) {\n  const favoritesMurkup = arrayOfObjects\n    .map(newsObject => {\n      // перебираем массив из Локального хранилища и создаем разметку для карточки\n      const { title, category, date, link, description, imageURL } = newsObject;\n      const favorite = JSON.stringify(newsObject);\n\n      //Логика отображения прочитанных на странице Фавориты--------------------------------------\n      let check = 'display: none;'; // стиль по умолчанию для плашки \"Already read\"\n      const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем массив URL прочитанных новостей\n      check = checkIfReadByUrl(urlFromLocaleStorage, link); //возвращает строку с разным свойством display\n      if (!check) {\n        // проверка на undefined\n        check = 'display: none;';\n      }\n      //---------------------------------------------------------------------\n\n      return `<li class=\"markup-unit markup-unit__read\" name=\"card\">\n    <p class=\"markup-unit__section\">${category}</p>\n    <p class=\"markup-unit__already-read\" style='${check}'>Already read\n    <svg class=\"markup-unit__icon-check\" width=\"18\" height=\"18\" viewBox=\"0 0 37 32\">\n      <path stroke=\"#00DD73\" stroke-linejoin=\"miter\" stroke-linecap=\"square\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M28.779 6.389c-0.288 0.009-0.546 0.131-0.732 0.323l-16.313 16.313-6.713-6.713c-0.195-0.209-0.473-0.339-0.78-0.339-0.589 0-1.067 0.478-1.067 1.067 0 0.308 0.13 0.585 0.339 0.78l0.001 0.001 7.467 7.467c0.193 0.193 0.459 0.312 0.754 0.312s0.561-0.119 0.754-0.312v0l17.067-17.067c0.199-0.194 0.323-0.465 0.323-0.765 0-0.589-0.478-1.067-1.067-1.067-0.011 0-0.022 0-0.033 0l0.002-0z\"></path>\n    </svg>\n    </p>\n    <img \n        class=\"markup-unit__card-image\" \n        src=\"${imageURL}\" \n        alt=\"placeholder\"\n        />\n    <button \n        class=\"markup-unit__add-favorite js-fbutton js-favorites\" \n        type=\"button\" \n        data-info\n        data-favorite='${favorite}'\n        data-id='${link}'\n      >\n      <p \n        class=\"markup-unit__favorite-text js-fbutton\"\n        data-favorite='${favorite}'\n        style=\"pointer-events: none;\"\n      >\n          Remove from favourites\n      </p>\n      <svg \n          data-favorite='${favorite}'  \n          class=\"markup-unit__favorite-icon markup-unit__favorite-icon--active js-fbutton\" \n          width=\"15\" \n          height=\"15\" \n          viewBox=\"0 0 37 32\"\n          style=\"pointer-events: none;\"\n        >\n        <path style=\"stroke: var(--color1, #4440f7)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M10.666 2.286c-4.207 0-7.619 3.377-7.619 7.543 0 3.363 1.333 11.345 14.458 19.413 0.235 0.143 0.505 0.219 0.78 0.219s0.545-0.076 0.78-0.219c13.125-8.069 14.458-16.050 14.458-19.413 0-4.166-3.412-7.543-7.619-7.543s-7.619 4.571-7.619 4.571-3.412-4.571-7.619-4.571z\"></path>\n      </svg>\n    </button>\n    <h2 class=\"markup-unit__card-header\" name=\"card_header\">\n        ${title}\n    </h2>\n    <p class=\"markup-unit__card-text\" name=\"card_text\">\n        ${description}\n    </p>\n    <div class=\"markup-unit__card-footer\">\n        <p class=\"markup-unit__card-date\">${date}</p>\n      <a \n        class=\"markup-unit__read-more\" \n        href=\"${link}\" \n        name=\"read_more\"\n        data-favorite='${favorite}'\n      >\n          Read more\n      </a>\n    </div>\n    </li>`;\n    })\n    .join(' ');\n\n  return (favouriteGallery.innerHTML = favoritesMurkup);\n}\n\n//============= Функция удаления элементов из ДОМ ======================================\nfunction onRemoveElement(element) {\n  element.remove();\n}\n\n// Логика работы с \"Прочитанными\" на странице Фавориты --------------------------------------------------------------------\n\nfavouriteGallery.addEventListener('click', onReadMoreClick); // вешаем слушатель событий на контейнер с новостями\n\n//============== Функция обработчик по клику на ссылку ReadMore ==============================================\nfunction onReadMoreClick(event) {\n  //   event.preventDefault();\n  if (!event.target.classList.contains('markup-unit__read-more')) return; // проверяем туда ли тырнули\n\n  const clickDate = receiveDate(); // получаем дату клика в виде 20/02/2023\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const urlFromLocaleStorage = onGetLocaleStorageData(READ_URL_KEY); // получаем из локального хранилища массив URL прочитанных новстей\n  const dataFromLocaleStorage = onGetLocaleStorageData(READ_KEY); // получаем массив объектов прочитанных новостей из Локального Хранилища\n\n  //------ Логика для массива ссылок прочитаных новостей\n  addHaveReadLink(urlFromLocaleStorage, parsedCardData.link, READ_URL_KEY);\n\n  //------ Логика для массива объектов с датой и новостями\n  addHaveReadNews(dataFromLocaleStorage, parsedCardData, clickDate, READ_KEY);\n}\n\n//========== Функция получения даты в формате 20/02/2021\nfunction receiveDate() {\n  const date = new Date();\n  const day = addLeadingZero(date.getDate());\n  const month = addLeadingZero(date.getMonth() + 1);\n  const year = addLeadingZero(date.getFullYear());\n  return `${day}/${month}/${year}`;\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n//========== Функция добавления ссылок на новости в отдельный массив в Locale Storage ============\nfunction addHaveReadLink(array, link, key) {\n  if (array) {\n    // если вернулся массив ссылок\n    const urlPresenceResult = array.some(item => item === link); // ищем есть ли совпадение с link результат\n\n    if (!urlPresenceResult) {\n      // если нету такого URL в массиве прочитанных новостей\n      array.push(link); //добавляем в массив URL из локального хранилища URL текущей новости\n      onSetLocaleStorageData(key, array); // сетаем в хранилище обновленный массив URL прочитанных новостей\n    }\n\n    return;\n  }\n\n  onSetLocaleStorageData(key, [link]); // если массива нет, создаем массив и помещаем туда url прочитанной новости и сетаем в Хранилище\n}\n\n//========== Функция добавления объекта прочитанных новостей согласно дате просмотра =============\nfunction addHaveReadNews(newsArr, cardObj, date, key) {\n  if (newsArr) {\n    // если возвращается массив дат с новостями из Локального Хранилища\n\n    const resultsArr = [];\n\n    newsArr.forEach(object => {\n      // перебираем все объекты прочитанных новостей с датами из Локального Хранилища\n      const { newsArray } = object;\n\n      const isPresent = newsArray.some(news => news.link === cardObj.link); // проверяем есть ли новость в коллекции\n      resultsArr.push(isPresent);\n    });\n\n    const isNewsPresent = resultsArr.some(result => result); // проверка присутствия новости\n\n    if (!isNewsPresent) {\n      // Если новость не присутствует в прочитанных\n      const datePresence = newsArr.some(item => item.whenRead === date); // проверяем есть ли сегодняшняя дата в массиве прочитанных\n\n      if (datePresence) {\n        // если дата уже присутствует в массиве\n        const arrWithNewObject = newsArr.map(item => {\n          // создаем новый массив перебирая массив из Локального Хранилища\n          const { whenRead, newsArray } = item;\n          if (whenRead === date) {\n            //когда совпадение по дате\n            newsArray.push(cardObj); // пушим в массив новостей объект с карточки\n            return { whenRead, newsArray };\n          }\n        });\n        console.log(arrWithNewObject);\n        onSetLocaleStorageData(key, arrWithNewObject); // сетаем модифицированный массив в локальное хранилище\n        return;\n      }\n\n      const whenHaveReadObject = {\n        // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n        whenRead: date,\n        newsArray: [cardObj],\n      };\n\n      newsArr.push(whenHaveReadObject); // пушим объект с новостью и датой в существующий массив из Локального Хранилища\n\n      onSetLocaleStorageData(key, newsArr); // сетаем новый массив в локальное хранилище\n    }\n\n    return;\n  }\n\n  const haveReadArray = []; // создаем массив который будем сетать в Локальное хранилище\n  const whenHaveReadObject = {\n    // создаем новый объект с датой когда новость прочитана и массивом прочитанных на эту дату\n    whenRead: date,\n    newsArray: [cardObj],\n  };\n\n  haveReadArray.push(whenHaveReadObject); // пушим в новый массив объект с датой и массивом прочитанных новостей\n\n  onSetLocaleStorageData(key, haveReadArray); // сетаем массив с прочитанными новостями и датой в Локальное Хранилище\n}\n//-----------------------------------------------------------------------------------------------------------------------------------\n\n//==================== Сервис Функции ===========================================\nfunction onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction checkIfReadByUrl(array, newsLink) {\n  if (!array || array.length === 0) {\n    // проверка на null или пустой массив\n    return;\n  }\n  const compareResult = array.some(item => item === newsLink);\n  if (compareResult) {\n    return 'display: flex;';\n  } else {\n    return 'display: none;';\n  }\n}\n"],"names":["$abdd8e5f37781622$var$newsGallery","document","querySelector","addEventListener","event","target","classList","contains","clickDate","date","Date","day","$abdd8e5f37781622$var$addLeadingZero","getDate","month","getMonth","year","getFullYear","$abdd8e5f37781622$var$receiveDate","parsedCardData","$abdd8e5f37781622$var$makeParseJson","dataset","favorite","urlFromLocaleStorage","$abdd8e5f37781622$var$onGetLocaleStorageData","dataFromLocaleStorage","array","link","key","some","item","push","$abdd8e5f37781622$var$onSetLocaleStorageData","$abdd8e5f37781622$var$addHaveReadLink","newsArr","cardObj","resultsArr","forEach","object","newsArray","isPresent","news","isNewsPresent","result","whenRead","map","whenHaveReadObject","haveReadArray","$abdd8e5f37781622$var$addHaveReadNews","$abdd8e5f37781622$var$favorites","JSON","parse","localStorage","getItem","error","console","log","stringData","data","setItem","stringify","value","String","padStart","hasAttribute","textContent","remove","index1","find","card","index","splice","length","removeItem","add","$3687957ccdbf9c3e$var$favouriteGallery","$3687957ccdbf9c3e$var$onRemoveElement","element","$3687957ccdbf9c3e$var$addLeadingZero","$3687957ccdbf9c3e$var$onGetLocaleStorageData","$3687957ccdbf9c3e$var$onSetLocaleStorageData","card1","closest","cardIDLink","id","alert","arrayOfObjects","favoritesMurkup","newsObject","title","category","description","imageURL","check","newsLink","$3687957ccdbf9c3e$var$checkIfReadByUrl","join","innerHTML","$3687957ccdbf9c3e$var$onCreateMurkup","$3687957ccdbf9c3e$var$onOpenFavorites","$3687957ccdbf9c3e$var$receiveDate","$3687957ccdbf9c3e$var$makeParseJson","$3687957ccdbf9c3e$var$addHaveReadLink","arrWithNewObject","$3687957ccdbf9c3e$var$addHaveReadNews"],"version":3,"file":"favourite.98922288.js.map"}