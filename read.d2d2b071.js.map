{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,IAAIC,EAAY,GAEKC,SAASC,cAAc,gBAA5C,MACMC,EAAmBF,SAASC,cAAc,mBA0LhD,SAASE,EAAuBC,GAC9B,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQJ,G,CACvC,MAAOK,GACPC,QAAQC,IAAIF,E,EAcS,SAAhBG,EAAuBR,EAAKS,GACnC,IACEN,aAAaO,QAAQV,EAAKC,KAAKU,UAAUF,G,CACzC,MAAOJ,GACPC,QAAQC,IAAIF,E,EA9MgBP,EAAfc,iBAAiB,SAKM,SAAfC,GACvB,IAAKA,EAAMC,OAAOC,aAAa,aAAc,OAExB,MAAfC,EAyLoB,SAALC,GACrB,IACE,OAAOhB,KAAKC,MAAMe,E,CAClB,MAAOZ,GACPC,QAAQC,IAAIF,E,EA7LSa,CAAcL,EAAMC,OAAOK,QAAQC,UACpDC,EAAwBtB,EAfV,aAiBuB,GAAvCc,EAAMC,OAAOQ,UAAUC,SAAS,gBAAiB,CAOJ,GAJ0BV,EAAnEC,OAAOU,YAAc,mBAEMX,EAA3BC,OAAOQ,UAAUG,OAAO,iBAEzBJ,EAGH,YADsCf,QAA9BC,IAAI,2BAId,MAAMmB,EAAQL,EAAsBM,MAAK,CAACC,EAAMC,KAElB,GAAxBD,EAAKE,OAASd,EAAec,KAC/B,OAAOD,CAAK,IAMQ,OAFxBR,EAAsBU,OAAOL,EAAO,GAEC,IAAjCL,EAAsBW,YAEG7B,aAAd8B,WAAW,kBAI1BzB,EA7CkB,YA6CoBa,E,CASS,GAJjCR,EAAVC,OAAOU,YAAc,wBAEMX,EAA3BC,OAAOQ,UAAUY,IAAI,gBAEvBb,EAAuB,CAMqB,GAJnBA,EAAsBc,MAC/CP,GAAQA,EAAKE,OAASd,EAAec,OAMrC,YAD8DxB,QAAtDC,IAAI,6BAIdZ,EAAY,IAAI0B,E,CAGlB1B,EAAUyC,KAAKpB,GAEsCR,EAvEjC,YAuEkBb,GAEbA,EAAb,E,IAIuB,SAAZK,GACvB,MAAMqB,EAAwBtB,EAAuBC,GAET,IAAvCqB,GAA0D,IAAjCA,EAAsBW,OAIlD,OAFyBK,MAAnB,uEACsC,EAA5C5C,EAAA6C,cAQwBC,EAJPlB,EAKnBkB,EAAMC,SAAQC,IAG8C,MAApDC,EAgFD,0KAhFiCD,EAmFZE,0gBAlF2C7C,EAApD8C,mBAAmB,YAAaF,GAE1B9C,SAASC,cAAc,yBAE/BgD,UAAYJ,EAAKK,UAC7BC,KAAIC,IAEoE,MAAjEC,MAAEA,EAAKC,SAAEA,EAAQC,KAAEA,EAAIrB,KAAEA,EAAIsB,YAAEA,EAAWC,SAAEA,GAChDL,EACI5B,EAAWnB,KAAKU,UAAUqC,GAIc,IAA1CM,EA2GZ,SAA8Bf,EAAOgB,GACnC,GAAKhB,GAA0B,IAAjBA,EAAMP,OAKpB,OADsBO,EAAMJ,MAAKqB,GAAQA,EAAK1B,OAASyB,IAE9C,CACLE,MAAO,eACPC,UAAW,yBAGN,CACLD,MAAO,YACPC,UAAW,oB,CAzHcC,CADD5D,EA5GR,aA6G6C+B,GAS3D,OARKwB,IAEKA,EAAW,CACjBG,MAAO,YACPC,UAAW,sBAIR,+FACuBR,kFAIvBG,iHAIuCC,EAAiBG,8EAG9CrC,wBACNU,yGAIMV,iEAGbkC,EAAiBI,gEAGFtC,+uBAWjB6B,kFAGAG,sGAGkCD,4EAG5BrB,yDAESV,qEAKf,IAEHwC,KAAK,IAAI,IA/EM,IAAMrB,C,CAnFQsB,CAVnB","sources":["src/read.js"],"sourcesContent":["import { getNoFound } from './js/markup';\n\nconst READ_KEY = 'HAVE_READ'; // ключ для массива прочитанных новостей в Локальном Хранилище\nconst READ_URL_KEY = 'READ_URL'; // ключ для массива URL прочитанных новостей в Локальном Хранилище\nconst FAVORITES_KEY = 'FAVORITES';\nlet favorites = [];\n\nconst accordionRef = document.querySelector('.js-haveread'); // получаем ссылку на секцию аккордиона\nconst accordionListRef = document.querySelector('.accordion-list'); // получаем ссылку на панель с новостями\n\naccordionListRef.addEventListener('click', onFavoriteClick); // делегируем слушание на секцию аккордиона\n\nonOpenFavorites(READ_KEY);\n\n//====== Функция-обработчик нажатия на кнопку Фавориты ==================\nfunction onFavoriteClick(event) {\n  if (!event.target.hasAttribute('data-info')) return; // проверка туда ли тырнули\n\n  const parsedCardData = makeParseJson(event.target.dataset.favorite); // получаем объект данных с карточки которая находится на странице\n  const dataFromLocaleStorage = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив объектов из Локального Хранилища\n\n  if (event.target.classList.contains('js-favorites')) {\n    // проверка условия содержит ли кнопка класс-метку что новость уже добавлена в избранное\n\n    event.target.textContent = 'Add to favorites'; // изменение текстового контента кнопки\n\n    event.target.classList.remove('js-favorites'); // убираем класс-метку что карточка добавлена в избранное\n\n    if (!dataFromLocaleStorage) {\n      // проверка на null из пустого Локального Хранилища\n      console.log(\"News isn't in favorites\");\n      return;\n    }\n\n    const index = dataFromLocaleStorage.find((card, index) => {\n      // получаем индекс нужной карточки\n      if (card.link === parsedCardData.link) {\n        return index;\n      }\n    });\n\n    dataFromLocaleStorage.splice(index, 1); // удаляем карточку по индексу\n\n    if (dataFromLocaleStorage.length === 0) {\n      // проверяем пустой массив или нет\n      localStorage.removeItem('FAVORITES');\n      return;\n    }\n\n    onSetLocaleStorageData(FAVORITES_KEY, dataFromLocaleStorage); // сетаем в локальное хранилище модифицированный массив\n\n    return;\n  }\n  //В противном случае==========//\n  event.target.textContent = 'Remove from favorites'; // изменение текстового контента кнопки\n\n  event.target.classList.add('js-favorites'); // добавляем класс-метку что карточка добавлена в избранное\n\n  if (dataFromLocaleStorage) {\n    // проверка на возврат null из пустого массива\n    const findPresenceResult = dataFromLocaleStorage.some(\n      card => card.link === parsedCardData.link\n    ); // получаем булевое значение есть ли новость в избранном\n\n    if (findPresenceResult) {\n      // делаем условие новости на присутствие в Локальном Хранилище в избранном\n      console.log(\"It's allredy in Favorites\");\n      return;\n    }\n\n    favorites = [...dataFromLocaleStorage]; // распыляем в массив \"Фавориты\" данные из массива полученные из Локального хранилища\n  }\n\n  favorites.push(parsedCardData); // добавляем объект с данными карточки новости в массив \"Фавориты\"\n\n  onSetLocaleStorageData(FAVORITES_KEY, favorites); // сетаем в локальное хранилище\n\n  favorites = []; // очищаем массив \"Фавориты\"\n}\n\n//=============== Функция при открытии страныцы \"Прочитанные\" ==================================\nfunction onOpenFavorites(key) {\n  const dataFromLocaleStorage = onGetLocaleStorageData(key); // получаем данные из избранных в Локальном Хранилище\n\n  if (!dataFromLocaleStorage || dataFromLocaleStorage.length === 0) {\n    // проверка на null или пустой массив\n    alert('Добавьте страницу заглушку пожалуйста. Файл read.js, 78-строка');\n    getNoFound();\n    return;\n  }\n\n  onCreateReadMurkup(dataFromLocaleStorage);\n}\n\n//============== Функция рендера разметки ======================================\nfunction onCreateReadMurkup(array) {\n  array.forEach(date => {\n    // перебираем массив с объектами со свойством даты и массивом новостей\n\n    const firstMurkup = createFirstMurkup(date); // создаем разметку секции аккордеона с датой для новостей (разметка первого уровня)\n    accordionListRef.insertAdjacentHTML('beforeend', firstMurkup); // рендерим эту разметку\n\n    const accordionPanel = document.querySelector('.accordion-list_panel'); // получаем ссылку на новосозданный элемент\n\n    accordionPanel.innerHTML = date.newsArray\n      .map(newsObject => {\n        // рендерим разметку непосредственно новостей (разметка второго внутреннего уровня)\n        const { title, category, date, link, description, imageURL } =\n          newsObject;\n        const favorite = JSON.stringify(newsObject);\n\n        //Логика проверки наличия новости в Фаворитах ------------------------------------------\n        const fromFavorites = onGetLocaleStorageData(FAVORITES_KEY); // получаем массив из фаворитов из Локального Хранилища\n        let configReadMarkup = checkFavouritesByUrl(fromFavorites, link); //по результату проверки возвращается объект настроек который используется для добавления динамических свойств в разметку\n        if (!configReadMarkup) {\n          // на случай undefined\n          configReadMarkup = {\n            class: 'zaglushka',\n            addRemove: 'Add to favourites',\n          };\n        }\n        //--------------------------------------------------------------------------------------\n        return `<li class=\"markup-unit markup-unit__read\" name=\"card\">\n    <p class=\"markup-unit__section\">${category}</p>\n    \n    <img \n        class=\"markup-unit__card-image\" \n        src=\"${imageURL}\" \n        alt=\"placeholder\"\n        />\n    <button \n        class=\"markup-unit__add-favorite js-fbutton ${configReadMarkup.class}\" \n        type=\"button\" \n        data-info\n        data-favorite='${favorite}'\n        data-id='${link}'\n      >\n      <p \n        class=\"markup-unit__favorite-text js-fbutton\"\n        data-favorite='${favorite}'\n        style=\"pointer-events: none;\"\n      >\n          ${configReadMarkup.addRemove}\n      </p>\n      <svg \n          data-favorite='${favorite}'  \n          class=\"markup-unit__favorite-icon markup-unit__favorite-icon--active js-fbutton\" \n          width=\"15\" \n          height=\"15\" \n          viewBox=\"0 0 37 32\"\n          style=\"pointer-events: none;\"\n        >\n        <path style=\"stroke: var(--color1, #4440f7)\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"4\" stroke-width=\"2.2857\" d=\"M10.666 2.286c-4.207 0-7.619 3.377-7.619 7.543 0 3.363 1.333 11.345 14.458 19.413 0.235 0.143 0.505 0.219 0.78 0.219s0.545-0.076 0.78-0.219c13.125-8.069 14.458-16.050 14.458-19.413 0-4.166-3.412-7.543-7.619-7.543s-7.619 4.571-7.619 4.571-3.412-4.571-7.619-4.571z\"></path>\n      </svg>\n    </button>\n    <h2 class=\"markup-unit__card-header\" name=\"card_header\">\n        ${title}\n    </h2>\n    <p class=\"markup-unit__card-text\" name=\"card_text\">\n        ${description}\n    </p>\n    <div class=\"markup-unit__card-footer\">\n        <p class=\"markup-unit__card-date\">${date}</p>\n      <a \n        class=\"markup-unit__read-more\" \n        href=\"${link}\" \n        name=\"read_more\"\n        data-favorite='${favorite}'\n      >\n          Read more\n      </a>\n    </div>\n    </li>`;\n      })\n      .join(' ');\n  });\n}\n\nfunction createFirstMurkup(obj) {\n  return `<li class=\"accordion-list_item\">\n                <div class=\"accordion-title_wrapper\">\n                    <p class=\"accordion-list_title\">\n                        ${obj.whenRead}\n                    </p>\n                    <div class=\"accordion-arrow__wraper\">\n                        <svg width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M1.7625 9L-3.18545e-07 7.28745L7.5 3.27835e-07L15 7.28745L13.2375 9L7.5 3.43725L1.7625 9Z\" fill=\"#111321\"/>\n                        </svg>\n                    </div>\n                </div>\n                <div class=\"accordion-list_panel\"></div>\n            </li>`;\n}\n\nfunction onGetLocaleStorageData(key) {\n  try {\n    return JSON.parse(localStorage.getItem(key)); // получаем массив объектов из Локального Хранилища\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функция парсинга данных из JSON файла =================================================\nfunction makeParseJson(stringData) {\n  try {\n    return JSON.parse(stringData);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//========== Функкция Добавления Данных в Locale Storage ========================================\nfunction onSetLocaleStorageData(key, data) {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction checkFavouritesByUrl(array, newsLink) {\n  if (!array || array.length === 0) {\n    // проверка на null или пустой массив\n    return;\n  }\n  const compareResult = array.some(item => item.link === newsLink);\n  if (compareResult) {\n    return {\n      class: 'js-favorites',\n      addRemove: 'Remove from favorites',\n    };\n  } else {\n    return {\n      class: 'zaglushka',\n      addRemove: 'Add to favourites',\n    };\n  }\n}\n"],"names":["$3huUq","parcelRequire","$56697b3ed36fb081$var$favorites","document","querySelector","$56697b3ed36fb081$var$accordionListRef","$56697b3ed36fb081$var$onGetLocaleStorageData","key","JSON","parse","localStorage","getItem","error","console","log","$56697b3ed36fb081$var$onSetLocaleStorageData","data","setItem","stringify","addEventListener","event","target","hasAttribute","parsedCardData","stringData","$56697b3ed36fb081$var$makeParseJson","dataset","favorite","dataFromLocaleStorage","classList","contains","textContent","remove","index1","find","card","index","link","splice","length","removeItem","add","some","push","alert","getNoFound","array","forEach","date1","firstMurkup","whenRead","insertAdjacentHTML","innerHTML","newsArray","map","newsObject","title","category","date","description","imageURL","configReadMarkup","newsLink","item","class","addRemove","$56697b3ed36fb081$var$checkFavouritesByUrl","join","$56697b3ed36fb081$var$onOpenFavorites"],"version":3,"file":"read.d2d2b071.js.map"}